{"version":3,"sources":["components/card-list/card-list.styles.module.css","components/card/card.styles.module.css","components/search-box/search-box.module.css","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Card","monster","className","styles","alt","name","src","id","email","CardList","monsters","children","map","item","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","catch","err","console","log","message","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,SAAW,qC,gBCA7BD,EAAOC,QAAU,CAAC,KAAO,4B,gBCAzBD,EAAOC,QAAU,CAAC,UAAY,gC,+LCCjBC,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,sBAAKC,UAAWC,IAAOH,KAAvB,UACE,qBAAKI,IAAG,UAAKH,EAAQI,KAAb,YAA6BC,IAAG,+BAA0BL,EAAQM,GAAlC,4BACxC,6BAAKN,EAAQI,OACb,4BAAIJ,EAAQO,YCJLC,EAAW,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,SAAwB,EAAdC,SAClC,OACE,qBAAKT,UAAWC,IAAOM,SAAvB,SACGC,EAASE,KAAI,SAACC,GACb,OAAO,cAAC,EAAD,CAAoBZ,QAASY,GAAlBA,EAAKN,U,wBCLlBO,EAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBAAOd,UAAWC,IAAOW,UAAWG,KAAK,SAASF,YAAcA,EAAcG,SAAWF,KC2D9EG,E,kDAvDb,aAAc,IAAD,8BAEX,gBA+BFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SA7BtC,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAa,IAPJ,E,qDAeb,WAAoB,IAAD,OACjBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAACX,SAAUoB,OACzCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAR,iCAAsCF,EAAIG,e,gCAG5D,WACEF,QAAQC,IAAI,sBAAuBE,KAAKX,S,oBAc1C,WAAU,IAAD,EAC2BW,KAAKX,MAA/Bf,EADD,EACCA,SAAUY,EADX,EACWA,YACZe,EAAmB3B,EAAS4B,QAAO,SAAArC,GAAO,OAC9CA,EAAQI,KAAKkC,cAAcC,SAASlB,EAAYiB,kBAElD,OACE,sBAAKrC,UAAU,MAAf,UACA,iDACE,cAAC,EAAD,CACEa,YAAY,iBACZC,aAAeoB,KAAKpB,eAEtB,cAAC,EAAD,CAAUN,SAAU2B,W,GAnDVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.85b1b4df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardList\":\"card-list_styles_CardList__31yj_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"card_styles_Card__VNkWF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBox\":\"search-box_SearchBox__1zqVo\"};","import styles from \"./card.styles.module.css\";\r\n\r\nexport const Card = ({ monster }) => {\r\n  return (\r\n    <div className={styles.Card}>\r\n      <img alt={`${monster.name} monster`} src={`https://robohash.org/${monster.id}?set=set4&size=180x180`} />\r\n      <h2>{monster.name}</h2>\r\n      <p>{monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import styles from './card-list.styles.module.css';\r\nimport { Card } from './../card/card.component';\r\n\r\nexport const CardList = ({monsters, children}) => {\r\n  return (\r\n    <div className={styles.CardList}>\r\n      {monsters.map((item) => {\r\n        return <Card key={item.id} monster={item}/>;\r\n      })}\r\n    </div>\r\n  );\r\n}","import styles from './search-box.module.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input className={styles.SearchBox} type=\"search\" placeholder={ placeholder } onChange={ handleChange } />\n  );\n}","import { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box';\n\n\nclass App extends Component {\n\n  constructor(){\n    // calls Component's constructor, gives access to this.state\n    super();\n\n    // Defining initial state\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n    // [EX.A] This is neccesary to \"this\" to be available inside handleChange function.\n    // JS DOES NOT set automatically \"this\" in methods context.\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({monsters: users}))\n      .catch(err => console.log(`Error retrieving data: ${err.message}`));\n  }\n\n  componentDidUpdate(){\n    console.log('ComponentDidUpdate:', this.state);\n  }\n\n  // [EX. A]\n  // handleChange(e){\n  //   this.setState({ searchField: e.target.value });\n  // }\n\n  // If we declare the handler this way, the arrow function GETS the context:\n  // Automatically binds \"this\" to the place where the arrow function is defined (the App Component)\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n      <h1>Kittins Rolodex</h1>\n        <SearchBox \n          placeholder='Search kittins'\n          handleChange={ this.handleChange }\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}